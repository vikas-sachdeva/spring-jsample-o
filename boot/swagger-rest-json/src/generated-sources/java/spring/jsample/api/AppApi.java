/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package spring.jsample.api;

import spring.jsample.models.Application;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-03T14:24:46.361+09:00")

@Api(value = "app", description = "the app API")
public interface AppApi {

    @ApiOperation(value = "Add new application", nickname = "addAdd", notes = "", response = Application.class, tags={ "application-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "application addition is successful", response = Application.class) })
    @RequestMapping(value = "/app/addApp",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Application> addAdd(@ApiParam(value = "application model" ,required=true )  @Valid @RequestBody Application application);


    @ApiOperation(value = "Delete application", nickname = "deleteApp", notes = "", response = String.class, tags={ "application-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Application delete is successful", response = String.class) })
    @RequestMapping(value = "/app/deleteApp/{id}",
        method = RequestMethod.DELETE)
    ResponseEntity<String> deleteApp(@ApiParam(value = "id",required=true) @PathVariable("id") Integer id);


    @ApiOperation(value = "Get list of applications", nickname = "getApps", notes = "", response = Application.class, responseContainer = "List", tags={ "application-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "application list retrival is successful", response = Application.class, responseContainer = "List") })
    @RequestMapping(value = "/app/getApps",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Application>> getApps();


    @ApiOperation(value = "Update existing application", nickname = "updateApp", notes = "", response = Application.class, tags={ "application-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Application update is successful", response = Application.class) })
    @RequestMapping(value = "/app/updateApp/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Application> updateApp(@ApiParam(value = "Application Model" ,required=true )  @Valid @RequestBody Application application,@ApiParam(value = "id",required=true) @PathVariable("id") Integer id);

}
